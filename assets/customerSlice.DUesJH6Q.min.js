import{c as l,a as n,b as c}from"./redux-toolkit.modern.aWRoiea1.min.js";import{i as p}from"./Global.CZoLVvO7.min.js";import{f as i}from"./fetchCustomersByAdminAPI.CyCBsWMi.min.js";const m=""+new URL("ppl-1.DNYQ4w4w.min.jpg",import.meta.url).href,_=Object.freeze(Object.defineProperty({__proto__:null,default:m},Symbol.toStringTag,{value:"Module"})),g=""+new URL("ppl-2.BmTWfSmn.min.jpg",import.meta.url).href,u=Object.freeze(Object.defineProperty({__proto__:null,default:g},Symbol.toStringTag,{value:"Module"})),d=""+new URL("ppl-3.BNWlGRTx.min.jpg",import.meta.url).href,f=Object.freeze(Object.defineProperty({__proto__:null,default:d},Symbol.toStringTag,{value:"Module"})),b=""+new URL("ppl-4.BQ_z0gR7.min.jpg",import.meta.url).href,j=Object.freeze(Object.defineProperty({__proto__:null,default:b},Symbol.toStringTag,{value:"Module"})),y=""+new URL("ppl-5.BfO9cnIP.min.jpg",import.meta.url).href,S=Object.freeze(Object.defineProperty({__proto__:null,default:y},Symbol.toStringTag,{value:"Module"})),O=""+new URL("ppl-6.AoeTgME2.min.jpg",import.meta.url).href,h=Object.freeze(Object.defineProperty({__proto__:null,default:O},Symbol.toStringTag,{value:"Module"})),v=""+new URL("ppl-7.Uz3IVIb6.min.jpg",import.meta.url).href,I=Object.freeze(Object.defineProperty({__proto__:null,default:v},Symbol.toStringTag,{value:"Module"})),s=l({name:"contact",initialState:{placeholderImages:{},imageLoadingError:null},reducers:{loadImages:(e,t)=>{e.imageLoadingError=!1,e.placeholderImages={...e.placeholderImages,...t.payload}},imageLoadingErr:e=>{e.imageLoadingError=!0}}}),M=()=>async(e,t)=>{try{const o=p(Object.assign({"../assets/contacts/ppl-1.jpg":_,"../assets/contacts/ppl-2.jpg":u,"../assets/contacts/ppl-3.jpg":f,"../assets/contacts/ppl-4.jpg":j,"../assets/contacts/ppl-5.jpg":S,"../assets/contacts/ppl-6.jpg":h,"../assets/contacts/ppl-7.jpg":I}));e(L(o))}catch{e(R())}},{loadImages:L,imageLoadingErr:R}=s.actions,U=s.reducer,a=n(),w=a.getInitialState({status:"idle"}),T=l({name:"customers",initialState:w,reducers:{},extraReducers:e=>{e.addCase(r.pending,(t,o)=>{t.status="loading"}).addCase(r.fulfilled,(t,o)=>{a.setAll(t,o.payload),t.status="idle"}).addCase(r.rejected,(t,o)=>{t.status="failed",o.payload?t.error=o.payload:o.error.message?t.error=o.error.message:t.error="An unknown error occurred."})}}),r=c("customers/fetchCustomers",async()=>await i());a.getSelectors(e=>e.customers);const E=T.reducer;export{E as a,U as c,r as f,M as l};
